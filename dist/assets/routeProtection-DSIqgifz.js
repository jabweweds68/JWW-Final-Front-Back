class s{constructor(){this.TOKEN_KEY="adminToken",this.USER_INFO_KEY="adminInfo",this.isInitialized=!1}hasToken(){const t=localStorage.getItem(this.TOKEN_KEY);return!!(t&&t.trim()!=="")}getToken(){return localStorage.getItem(this.TOKEN_KEY)}getUserInfo(){const t=localStorage.getItem(this.USER_INFO_KEY);try{return t?JSON.parse(t):null}catch(e){return console.error("Error parsing user info:",e),null}}clearAuth(){localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_INFO_KEY)}redirectToLogin(){window.location.href="login.html"}redirectToDashboard(){window.location.href="dashboard.html"}detectPageType(){const t=window.location.pathname.toLowerCase(),e=t.split("/").pop(),i=window.location.href.toLowerCase();return e==="login.html"||t.includes("login")||i.includes("login.html")||t==="/"||t==="/index.html"||e==="index.html"||e===""?"login":(e==="dashboard.html"||e==="orders.html"||t.includes("dashboard")||t.includes("orders")||i.includes("dashboard.html")||i.includes("orders.html"),"dashboard")}protectDashboardPage(){return this.hasToken()?(document.body.style.visibility="visible",!0):(document.body.style.visibility="hidden",this.redirectToLogin(),!1)}protectLoginPage(){return this.hasToken()?(document.body.style.visibility="hidden",this.redirectToDashboard(),!1):(document.body.style.visibility="visible",!0)}logout(){confirm("Are you sure you want to logout?")&&(this.clearAuth(),this.redirectToLogin())}setupLogoutButton(){const t=document.getElementById("logoutBtn");if(t){t.onclick=i=>{i.preventDefault(),this.logout()};return}const e=document.querySelector(".nav-menu");if(e){const i=document.createElement("a");i.href="#",i.className="nav-link",i.id="logoutBtn",i.innerHTML='<i class="fas fa-sign-out-alt"></i> Logout',i.onclick=n=>{n.preventDefault(),this.logout()},e.appendChild(i)}}getAuthHeaders(){return{"Content-Type":"application/json",Authorization:`Bearer ${this.getToken()}`}}async authenticatedFetch(t,e={}){const i=this.getAuthHeaders(),n={...e,headers:{...i,...e.headers}};try{const o=await fetch(t,n);if(o.status===401)throw this.clearAuth(),this.redirectToLogin(),new Error("Unauthorized");return o}catch(o){throw console.error("Authenticated fetch error:",o),o}}initialize(){if(this.isInitialized)return;const t=this.detectPageType();document.body.style.visibility="hidden",t==="login"?this.protectLoginPage()&&typeof initializePageContent=="function"&&initializePageContent():this.protectDashboardPage()&&(this.setupLogoutButton(),typeof initializePageContent=="function"&&initializePageContent()),this.isInitialized=!0}}const r=new s;document.addEventListener("DOMContentLoaded",()=>{r.initialize()});document.readyState!=="loading"&&r.initialize();
